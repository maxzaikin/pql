many-to-many order creation example

>>> # import all the necessary things and create a session
>>> from models import Product, Customer, Order, OrderItem
>>> from db import Session
>>> session = Session()
>>> # create a new customer
>>> c = Customer(name='Jane Smith')
>>> # create a new order, add it to the customer and to the database session
>>> o = Order()
>>> c.orders.add(o)
>>> session.add(o)
>>> # add the first line item in the order: product #45 for $45.50
>>> p1 = session.get(Product, 45)
>>> o.order_items.append(OrderItem(product=p1, unit_price=45.5, quantity=1))
>>> # add the second line item: 2 of product #82 for $37 each
>>> p2 = session.get(Product, 82)
>>> o.order_items.append(OrderItem(product=p2, unit_price=37, quantity=2))
>>> # write the order (along with the customer and order items) to the database
>>> session.commit()
>>> # check the UUID and the timestamp defaults assigned to the new order
>>> o.id
UUID('a73c6aad-8ba9-4550-ac2f-1fcc9285cddc')
>>> o.timestamp
datetime.datetime(2023, 2, 24, 19, 52, 47, 293727)

# calculates total page views in November 2022
>>> q= select(func.count(BlogView.id)).where(BlogView.timestamp.between(datetime(2022,11,1),datetime(2022,12,1)))
>>> session.scalar(q)

# shows the ranking of blog articles from most to least viewed, also for the month of November 2022
>>> q= (select(BlogArticle.title, page_views).join(BlogArticle.views).where(BlogView.timestamp.between(datetime(2022,11,1), datetime(2022,12,1))).group_by(BlogArticle).order_by(page_views.desc(),BlogArticle.title))
>>> session.execute(q).all()

